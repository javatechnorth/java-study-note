package com.north.algorithm;


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 * 给定一个射击比赛成绩单，包含多个选手若干次射击的成绩分数，请对每个选手按其最高3个分数之和进行降序排名，输出降序排名后的选手ID序列。条件如下：
 * 1、一个选手可以有多个射击成绩的分数，且次序不固定。
 * 2、如果一个选手成绩少于3个，则认为选手的所有成绩无效，排名忽略该选手。
 * 3、如果选手的成绩之和相等，则成绩之和相等的选手按照其ID降序排列。
 * 输入描述:
 * 输入第一行，一个整数N，表示该场比赛总共进行了N次射击，产生N个成绩分数（2<=N<=100）。
 * 输入第二行，一个长度为N整数序列，表示参与每次射击的选手ID（0<=ID<=99）。
 * 输入第三行，一个长度为N整数序列，表示参与每次射击的选手对应的成绩（0<=成绩<=100）。
 * 输出描述:
 * 符合题设条件的降序排名后的选手ID序列。
 * 示例1
 * 输入
 * 13
 * 3,3,7,4,4,4,4,7,7,3,5,5,5
 * 53,80,68,24,39,76,66,16,100,55,53,80,55
 * 输出
 * 5,3,7,4
 * 说明
 * 该场射击比赛进行了13次，参赛的选手为{3,4,5,7}。
 * 3号选手成绩：53,80,55，最高3个成绩的和为：80+55+53=188。
 * 4号选手成绩：24,39,76,66，最高3个成绩的和为：76+66+39=181。
 * 5号选手成绩：53,80,55，最高3个成绩的和为：80+55+53=188。
 * 7号选手成绩：68,16,100，最高3个成绩的和为：100+68+16=184。
 * 比较各个选手最高3个成绩的和，有3号=5号>7号>4号，由于3号和5号成绩相等且ID号5>3，所以输出为：5,3,7,4
 * ————————————————
 * 版权声明：本文为CSDN博主「旧梦昂志」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
 * 原文链接：https://blog.csdn.net/csfun1/article/details/124544351
 */

public class ShoutScore {
    public static void main(String[] args) {

        List<Integer> list = new ArrayList<>();
        list.add(123);
        list.add(124);
        list.add(125);
        Collections.sort(list, (o1, o2) -> o2 - o1);

        System.out.println(list);
    }
}
